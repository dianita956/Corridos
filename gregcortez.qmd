---
title: "Mapping El Corrido de Gregorio Cortez"
author: "Diane López"
date: "January 30, 2023"
format:
    html:
        code-fold: true
jupyter: python3
---
```{markdown}
Mapping the manhunt of Rio Grande border folk hero Gregorio Cortez: 
the largest manhunt in U.S. history from June 14, 1901 to June 22, 1901

Based on lyrics from the Corrido de Gregorio Cortez 
(Variant X English translation by Americo Paredes)
```
```{python}
import geopandas as gpd
import pandas as pd
import numpy as np

from geograpy import places
import re

import geopy
from geopy.geocoders import ArcGIS
#from geopy.extra.rate_limiter import RateLimiter

import shapely
from shapely.geometry import Point
from shapely.wkt import loads

import contextily as cx
import matplotlib.pyplot as plt #to make sure there are no errors when plotting a graph
import pyproj
import plotly.express as px 

import spacy
from spacy import displacy

import locationtagger
nlp = spacy.load("en_core_web_sm")

import branca
import jinja2
import requests
import folium
```
```{python}
text = "corrido corpus\ElCorridodeGregorioCortez_X.txt"
with open(text, 'r', encoding='utf-8') as c:
    text = c.read()
    
def clean_text(text):
    cleaned= re.sub(r'[":;,.“”]', "", text)
    return(cleaned)
text = clean_text(text)
#print(text)


TxGPE=[]
nlp = spacy.load("tx_trained_ner")
doc =nlp(text) 
#print(doc)
for ent in doc.ents:
    #print(ent.text, ent.label_)
    if ent.label_ == "GPE":
        TxGPE.append(ent.text)
print(TxGPE)
```
```{python}
ents = [(e.text, e.start_char, e.end_char, e.label_)for e in doc.ents]
print(ents)

ents = [(e.text)for e in doc.ents]
print(ents)
```

```{python}  
displacy.render(doc, style ='ent', jupyter=True, page=True)
```
```{python}
pc = places.PlaceContext(ents)

pc.set_countries()
print (pc.countries) #['United States']

pc.set_regions()
print(pc.regions) #['Texas'])

pc.set_cities()
print(pc.cities) #['Brownsville'])
```
```{python}
df = pd.DataFrame(ents, columns=["NER_Places"])
geolocator = ArcGIS(user_agent='CorridosMap')
geocode = lambda query: geolocator.geocode("%s, Texas" % query)
df['Location'] = df['NER_Places'].apply(geocode)
df
```
```{python}
gdf = gpd.tools.geocode(df.Location, provider='ArcGIS')
gdf
```

```{python}

px.set_mapbox_access_token(open("mapboxtoken").read())
fig = px.line_mapbox(gdf,
                        lat=gdf.geometry.y,
                        lon=gdf.geometry.x,
                        hover_name="address",
                        )

fig.update_layout(mapbox_style="stamen-terrain", mapbox_zoom=6, mapbox_center_lat = 29,
    margin={"r":0,"t":0,"l":0,"b":0})

fig.show()
```
